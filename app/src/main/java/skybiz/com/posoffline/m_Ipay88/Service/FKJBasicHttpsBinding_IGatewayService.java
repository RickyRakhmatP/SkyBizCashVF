package skybiz.com.posoffline.m_Ipay88.Service;




//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.5.2.0
//
// Created by Quasar Development 
//
//---------------------------------------------------




import org.ksoap2.HeaderProperty;
import org.ksoap2.serialization.*;
import org.ksoap2.transport.*;
import org.kxml2.kdom.Element;

import java.lang.reflect.Constructor;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


public class FKJBasicHttpsBinding_IGatewayService
{
    interface FKJIWcfMethod
    {
        FKJExtendedSoapSerializationEnvelope CreateSoapEnvelope() throws java.lang.Exception;

        java.lang.Object ProcessResult(FKJExtendedSoapSerializationEnvelope __envelope,java.lang.Object result) throws java.lang.Exception;
    }

    String url="https://payment.ipay88.com.my/ePayment/WebService/MHGatewayService/GatewayService.svc";

    int timeOut=60000;
    public List< HeaderProperty> httpHeaders= new ArrayList< HeaderProperty>();
    public boolean enableLogging;

    public FKJBasicHttpsBinding_IGatewayService(){}

    public FKJBasicHttpsBinding_IGatewayService(String url)
    {
        this.url = url;
    }

    public FKJBasicHttpsBinding_IGatewayService(String url,int timeOut)
    {
        this.url = url;
        this.timeOut=timeOut;
    }

    protected org.ksoap2.transport.Transport createTransport()
    {
        try
        {
            java.net.URI uri = new java.net.URI(url);
            if(uri.getScheme().equalsIgnoreCase("https"))
            {
                int port=uri.getPort()>0?uri.getPort():443;
                return new com.easywsdl.exksoap2.transport.AdvancedHttpsTransportSE(uri.getHost(), port, uri.getPath(), timeOut);
            }
            else
            {
                return new com.easywsdl.exksoap2.transport.AdvancedHttpTransportSE(url,timeOut);
            }

        }
        catch (java.net.URISyntaxException e)
        {
        }
        return null;
    }
    
    protected FKJExtendedSoapSerializationEnvelope createEnvelope()
    {
        FKJExtendedSoapSerializationEnvelope envelope= new FKJExtendedSoapSerializationEnvelope(FKJExtendedSoapSerializationEnvelope.VER11);
            return envelope;
    }
    
    protected java.util.List sendRequest(String methodName,FKJExtendedSoapSerializationEnvelope envelope,org.ksoap2.transport.Transport transport ,com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile profile )throws java.lang.Exception
    {
        if(transport instanceof com.easywsdl.exksoap2.transport.AdvancedHttpTransportSE )
        {
            return ((com.easywsdl.exksoap2.transport.AdvancedHttpTransportSE)transport).call(methodName, envelope,httpHeaders,null,profile);
        }
        else
        {
            return ((com.easywsdl.exksoap2.transport.AdvancedHttpsTransportSE)transport).call(methodName, envelope,httpHeaders,null,profile);
        }  
    }

    java.lang.Object getResult(java.lang.Class destObj,java.lang.Object source,String resultName,FKJExtendedSoapSerializationEnvelope __envelope) throws java.lang.Exception
    {
        if(source==null)
        {
            return null;
        }
        if(source instanceof SoapPrimitive)
        {
            SoapPrimitive soap =(SoapPrimitive)source;
            if(soap.getName().equals(resultName))
            {
                java.lang.Object instance=__envelope.get(source,destObj,false);
                return instance;
            }
        }
        else
        {
            SoapObject soap = (SoapObject)source;
            if (soap.hasProperty(resultName))
            {
                java.lang.Object j=soap.getProperty(resultName);
                if(j==null)
                {
                    return null;
                }
                java.lang.Object instance=__envelope.get(j,destObj,false);
                return instance;
            }
            else if( soap.getName().equals(resultName)) {
                java.lang.Object instance=__envelope.get(source,destObj,false);
                return instance;
            }
       }

       return null;
    }

        
    public FKJClientResponseModel EntryPageFunctionality(final FKJClientRequestModel requestModelObj ) throws java.lang.Exception
    {
        com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile __profile = new com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile();
        return (FKJClientResponseModel)execute(new FKJIWcfMethod()
        {
            @Override
            public FKJExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              FKJExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("https://www.mobile88.com","requestModelObj",new FKJClientRequestModel().getClass());
                SoapObject __soapReq = new SoapObject("https://www.mobile88.com", "EntryPageFunctionality");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="https://www.mobile88.com";
                __info.name="requestModelObj";
                __info.type=FKJClientRequestModel.class;
                __info.setValue(requestModelObj!=null?requestModelObj:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(FKJExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return (FKJClientResponseModel)getResult(FKJClientResponseModel.class,__result,"EntryPageFunctionalityResult",__envelope);
            }
        },"https://www.mobile88.com/IGatewayService/EntryPageFunctionality",__profile);
    }

    
    protected java.lang.Object execute(FKJIWcfMethod wcfMethod,String methodName,com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile profile) throws java.lang.Exception
    {
        org.ksoap2.transport.Transport __httpTransport=createTransport();
        __httpTransport.debug=enableLogging;
        FKJExtendedSoapSerializationEnvelope __envelope=wcfMethod.CreateSoapEnvelope();
        try
        {
            sendRequest(methodName, __envelope, __httpTransport,profile);
            
        }
        finally {
            if (__httpTransport.debug) {
                if (__httpTransport.requestDump != null) {
                    System.out.println("requestDump: "+__httpTransport.requestDump);
                    
                }
                if (__httpTransport.responseDump != null) {
                    System.out.println("responseDump: "+__httpTransport.responseDump);
                }
            }
        }
        java.lang.Object __retObj = __envelope.bodyIn;
        if (__retObj instanceof org.ksoap2.SoapFault){
            org.ksoap2.SoapFault __fault = (org.ksoap2.SoapFault)__retObj;
            throw convertToException(__fault,__envelope);
        }else{
            return wcfMethod.ProcessResult(__envelope,__retObj);
        }
    }
    
        
    protected java.lang.Exception convertToException(org.ksoap2.SoapFault fault,FKJExtendedSoapSerializationEnvelope envelope)
    {
        org.ksoap2.SoapFault newException = fault;

        if(fault.detail!=null && fault.detail.getChildCount()>0)
        {
            Element detailsNode=(Element)fault.detail.getChild(0);
            try
            {
                SoapObject exceptionObject = null;
                exceptionObject=envelope.GetExceptionDetail(detailsNode,"http://schemas.datacontract.org/2004/07/System.ServiceModel","FaultException");
                if (exceptionObject != null)
                {
                    FKJFaultException ex=new FKJFaultException();
                    ex.loadFromSoap(exceptionObject,envelope);
                    newException = ex;
                }
            }
            catch (java.lang.Exception e)
            {
                e.printStackTrace();
            }
            newException.detail=fault.detail;
            newException.faultactor=fault.faultactor;
            newException.faultcode=fault.faultcode;
            newException.faultstring=fault.faultstring;
            newException.version=fault.version;
        }
        return newException;
    }
}


